<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="CalibCam1" Id="{5a068959-7445-4566-a77a-1d5af3bc0010}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM CalibCam1
VAR_INPUT
	State: INT :=0;
	NewState: INT := 0;
	next: BOOL;
END_VAR

VAR
	bCommandStarted: BOOL;

	Wait: TON;
	bWait: BOOL;
	Wait2: TON;
	bWait2: BOOL;
	Wait3: TON;
	bWait3: BOOL;
	bStopped: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF sNewCalib = 'he-cut-start' THEN
	startCalibCam1 := TRUE;
ELSE
	startCalibCam1 := FALSE;
END_IF

CASE State OF

	0:		(* Wait for start of Calib cam 1 *)
		IF (uiprogNo = 1 OR allZero) AND startCalibCam1 AND State <> 2000  AND NOT bAlarmState THEN
			uiCalibImgCount := 0;
			uiSignalOutTool.06 := TRUE;
			startCalibCam1 := FALSE;
			GbCloseCut := TRUE;									(* When calibrating Cam 1, the cutter most be closed *)
			NewState := 10;
		END_IF

	10:		(* Set calibration velocity *)
		uiSignalOutSpeedControl := UINT_TO_BYTE(uiSpeedSetting);
		uiSignalOutControl := Set_Velocity;

		IF uiSignalInAck = Set_Velocity THEN
			uiSignalOutControl := 0;
			NewState := 15;
		END_IF

	15:
		IF uiSignalInAck = 0 THEN
			NewState := 20;
		END_IF

	20:		(* Move to idle *)
		uiSignalOutControl := Move_to_idle;
		IF uiSignalInAck = Move_to_idle THEN
			uiSignalOutControl := 0;
			NewState := 25;
		END_IF

	25:
		IF uiSignalInAck = 0 THEN
			NewState := 30;
		END_IF

	30:		(* Set CmdByte to 2, to tell PC to start calibration of Cam 1 *)
		bCalibCamOneStart := TRUE;

		IF stDataFromVision.CmdInProcess =  stDataToVision.CmdByte AND stDataToVision.CmdByte <> 0 THEN							(* When PC recieve command, it sends acknowledge *)
			bCalibCamOneStart := FALSE;
			NewState := 35;
		END_IF
		
	35:
		FB_CLOSE_CUT.Execute := TRUE;
		IF FB_CLOSE_CUT.Done THEN
			FB_CLOSE_CUT.Execute := FALSE;
			NewState := 37;
		END_IF
		
	37:
		IF sNewCalib = 'calib-mounted' THEN
			NewState := 40;
		END_IF
		

	40:		(* Call CALIB_CAM1 on robot Cut. Robot Cut move to a pos to take a picture *)
		uiSignalOutControl := CalibCamOne;
		IF uiSignalInAck = CalibCamOne THEN
			uiSignalOutControl := 0;
			NewState := 45;
		END_IF

	45:
		IF uiSignalInAck = 0 THEN
			NewState := 50;
		END_IF

	50:		(* Before the picture is taken, call get cut coord *)
		getCutCoords := TRUE;										(* Get coord from robot Cut *)
		IF uiSignalInAck = getCurrentCutCoords THEN
			uiSignalOutControl := 0;
			NewState := 55;
		END_IF

	55:
		IF uiSignalInAck = 0 THEN
			bWait := TRUE;
			IF Wait.Q THEN
				bWait := FALSE;
				NewState := 60;
			END_IF
		END_IF

	60:		(* CmdByte 3 means that we want to take a picture *)
		bNewPosCalibCamOne := TRUE;
		IF stDataFromVision.CmdInProcess =  stDataToVision.CmdByte AND stDataToVision.CmdByte <> 0 THEN
			bNewPosCalibCamOne := FALSE;
			NewState := 70;
		END_IF

	70:		(* If there has not been taken enough pictures go to state 40 in order to take more picture. Else send CmdByte 4 to tell PC to stop calib *)
		uiCalibImgCount := uiCalibImgCount + 1;
		IF uiCalibImgCount < 8 THEN
			NewState := 40;
		ELSE
			uiCalibImgCount := 0;
			bEndCalibCamOne := TRUE;
			NewState := 80;
		END_IF

	80:		(* Reset CmdByte and go to init state *)
		uiSignalOutControl := Move_to_idle;
		IF uiSignalInAck = Move_to_idle THEN
			uiSignalOutControl := 0;
			NewState := 82;
		END_IF
	
	82:		
		IF sNewCalib = 'calib-unmounted' THEN
			uiSignalOutTool.06 := FALSE;
			NewState := 84;
		END_IF	
		
	84:
		uiSignalOutControl := Move_to_idle;
		IF uiSignalInAck = Move_to_idle THEN
			uiSignalOutControl := 0;
			NewState := 90;
		END_IF

	85:
		IF uiSignalInAck = 0 THEN
			NewState := 90;
		END_IF

	90:
		IF stDataFromVision.CmdInProcess = stDataToVision.CmdByte AND stDataToVision.CmdByte <>0 THEN
			bEndCalibCamOne := FALSE;
			GbCloseCut := FALSE;
			uiStatus := 0;
			NewState := 0;
		END_IF

	1000:		(* RESET *)
		uiSignalOutTool.06 := FALSE;
		startCalibCam1 			:= FALSE;
		uiSignalOutControl 		:= 0;
		bCalibCamOneStart 		:= FALSE;
		getCutCoords				:= FALSE;
		bNewPosCalibCamOne 	:= FALSE;
		uiCalibImgCount			:= 0;
		bEndCalibCamOne		:= FALSE;

		NewState := 0;

	2000:
		bStopped := TRUE;


END_CASE

IF bStart AND NOT bStop AND NOT bAlarmState AND uiprogNo = 1 AND State <> 2000 THEN
	startCalibCam1 := TRUE;
	(*bStart := FALSE;*)
	uiStatus := 1;
END_IF

IF State <> 2000 THEN
	bStopped := FALSE;
END_IF
Wait		(IN:=  bWait		, PT:=t#1000ms, Q=>, ET=>); 		(*Timer*)
Wait2	(IN:=  bWait2		, PT:=t#2000ms, Q=>, ET=>); 	(*Timer*)
Wait3	(IN:=  bWait3		, PT:=t#2000ms, Q=>, ET=>); 	(*Timer*)]]></ST>
    </Implementation>
    <LineIds Name="CalibCam1">
      <LineId Id="213" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="218" Count="1" />
      <LineId Id="216" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="18" Count="4" />
      <LineId Id="206" Count="0" />
      <LineId Id="23" Count="37" />
      <LineId Id="175" Count="1" />
      <LineId Id="178" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="209" Count="1" />
      <LineId Id="220" Count="2" />
      <LineId Id="211" Count="0" />
      <LineId Id="61" Count="51" />
      <LineId Id="229" Count="1" />
      <LineId Id="227" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="226" Count="0" />
      <LineId Id="232" Count="1" />
      <LineId Id="235" Count="3" />
      <LineId Id="234" Count="0" />
      <LineId Id="113" Count="14" />
      <LineId Id="204" Count="0" />
      <LineId Id="128" Count="27" />
    </LineIds>
  </POU>
</TcPlcObject>